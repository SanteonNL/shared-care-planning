@startuml task-negotiation-overview-1-2
autonumber


' title Use Case Home monitoring - Hospital onboarding Patient at Monitoring Clinic

box Care Provider 1
    actor "Practitioner" as Practitioner1
    participant "Care Plan Contributor" as CPC1
    participant "Care Plan Service" as CPS
end box
box Care Provider 2
    participant "Care Plan Contributor" as CPC2
    participant "Order mgnt" as EHR2
    actor "Practitioner" as Practitioner2
end box

activate Practitioner1
Practitioner1 -> CPC1 : Start Request\nreferral
activate CPC1
CPC1 -> CPS : Create CarePlan\n(if non exists\nreferring Patient\nand Conditions)
activate CPS
CPC1 -> CPS : Create Task\n(status requested,\nreferring CarePlan\nand (Service-)Request)
CPS -> CPC2 : Notify Task creation
activate CPC2
CPC2 -> EHR2 : Notify Task creation
EHR2 -> EHR2 : check\navailabity
EHR2 -> CPC2 : Task accepted
CPC2 -> CPS : Update Task\n(status accepted)
CPS -> CPC1 : Notify Task update
CPC1 -> Practitioner1 : Task accepted
deactivate Practitioner1
group Optional: Add PII to Task //after// Task acceptance
CPC1 -> CPS : Update Task (add PII)
CPS -> CPC2 : Notify Task update
CPC2 -> EHR2 : Notify Task updated
EHR2 -> EHR2 : check\ndata input\nrequirements
end group
{taskprogress} EHR2 -> CPC2 : Task in-progress
CPC2 -> CPS : Update Task\n(status in-progress)
CPS -> CPC1 : Notify Task update
== waiting for Task to finish ==
 Practitioner2 -> EHR2 : I'm done

{taskdone} EHR2 -> CPC2 : Task is done
{taskprogress} <-> {taskdone} : some time
CPC2 -> CPS : Update Task\n(status complete)
deactivate CPC2
CPS -> CPC1 : Notify Task update
deactivate CPC1
deactivate CPC1