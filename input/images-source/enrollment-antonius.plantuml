@startuml task-negotiation-overview-1-2-3

autonumber 1.1

' title Use Case Home monitoring - Hospital onboarding Patient at Monitoring Clinic
box Care Provider 2: Antonius
    actor "Practitioner" as Practitioner
    participant "Epic EHR" as Epic #LightYellow
    participant "Epic on FHIR" as EpicOnFHIR #LightYellow
    participant "API platform (role: CPC \n(Requester))" as APIplatform #LightCoral
    participant "Orca app" as OrcaApp #LightBlue
    'participant CPU
end box
box Care Provider 1: Zorg bij jou
    participant "Care Plan Service" as CPS #LightBlue
    participant "Care Plan Contributor \n(Performer)" as CPC #LightBlue
end box

== create order in Epic and convert to FHIR ==
Practitioner -> Epic : Enter \nEnrollment \norder

Epic -> Epic : Compose HL7v2\n-ORM message
Epic -> APIplatform : Send HL7v2 message
activate APIplatform
APIplatform -> APIplatform: Inspect HL7v2 message \nfor conversion

APIplatform -> EpicOnFHIR: search and \nread resources
activate EpicOnFHIR
EpicOnFHIR --> APIplatform: resources
deactivate EpicOnFHIR

APIplatform -> APIplatform: Convert HL7v2 message \nto resources
APIplatform -> APIplatform: Store Task, CarePlan, \nServiceRequest
deactivate APIplatform

== create and send generic enrollment request ==
autonumber inc a

Practitioner -> Epic : Open Orca-app
activate Practitioner

Epic -> OrcaApp: launch app \n(SMART on FHIR)
activate OrcaApp
OrcaApp -> OrcaApp: inspect launch context \nfor prefill
OrcaApp -> APIplatform: search and read resources
APIplatform --> OrcaApp: resources \n(Task, CarePlan, ServiceRequest)
OrcaApp -> OrcaApp: prefill generic \nenrollment form
OrcaApp -> Practitioner: display generic enrollment \ncharacteristics
Practitioner -> OrcaApp : confirm , Start Enrollment requestl
OrcaApp -> CPS : Create Task\n(status requested,\nreferring CarePlan\nand ServiceRequest)

CPS -> CPC  : Notify Task created
activate CPC
CPC -> CPC : evaluate Task\n (required data,\n capacity, etc):\n status 'received'
CPC -> CPC : Need more information \nfor carepath

== request, create and send carepath-specific enrollment information ==
autonumber inc a

CPC -> CPS  : Update Task: status received,\n add preliminary QuestionnaireResponse\n to Task.input to get carepath-specific input
deactivate CPC

CPS -> OrcaApp : Notify Task update
OrcaApp -> APIplatform : update Task.status \nto 'received'
OrcaApp -> OrcaApp : inspect \nQuestionnaireResponse
OrcaApp -> APIplatform: search and read resources \nto fill QuestionnaireResponse
APIplatform --> OrcaApp: resources
OrcaApp -> OrcaApp: prefill carepath-specific \nenrollment form
OrcaApp -> Practitioner: display carepath-specific enrollment \ncharacteristics

Practitioner -> OrcaApp : confirm/complete form
OrcaApp -> CPS : Update Task: Complete\n QuestionnaireResponse\n in Task.input
CPS -> CPC : Notify Task update

== task acceptance ==
autonumber inc a


activate CPC
CPC -> CPC : evaluate Task:\n status 'accepted'
CPC -> CPS : Update Task status\n(status accepted)
deactivate CPC

CPS -> OrcaApp : Notify Task update
OrcaApp -> APIplatform : update Task.status \nto 'accepted'

group Optional: Add PII to Task //after// Task acceptance
    OrcaApp -> CPS : Update Task (add PII)
    CPS -> CPC : Notify Task update\n(enriched Task)
end group
OrcaApp -> Practitioner : Done
deactivate OrcaApp
deactivate Practitioner

== waiting for Task to start ==
autonumber inc a
CPC -> CPS : Update Task status\n(status in-progress)
CPS -> OrcaApp : Notify Task update
OrcaApp -> APIplatform : update Task.status \nto 'in-progress'

== waiting for Task to finish ==
autonumber inc a
CPC -> CPS : Update Task status\n(status complete)
CPS -> OrcaApp : Notify Task update
OrcaApp -> APIplatform : update Task.status \nto 'complete'

legend bottom
    |<#LightYellow> Hosted by Antonius/Epic|
    |<#LightCoral> Hosted by Harmony|
    |<#LightBlue> Hosted by Zorgbijjou|
endlegend